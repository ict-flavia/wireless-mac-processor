## Copyright (c) 1995-2010 Xilinx, Inc.  All rights reserved.

## You may copy and modify these files for your own internal use solely with
## Xilinx programmable logic devices and  Xilinx EDK system or create IP
## modules solely for Xilinx programmable logic devices and Xilinx EDK system.
## No rights are granted to distribute any files unless they are distributed in
## Xilinx programmable logic devices.

BEGIN wlan_phy_tx_pmd_axiw

## Peripheral Options
OPTION RUN_NGCBUILD = TRUE
OPTION IMP_NETLIST = TRUE
OPTION STYLE = MIX
OPTION HDL = MIXED
OPTION IPTYPE = PERIPHERAL
OPTION LAST_UPDATED = 14.4i
OPTION USAGE_LEVEL = BASE_USER
OPTION ARCH_SUPPORT_MAP = ( others=DEVELOPMENT )

## Bus Interfaces
BUS_INTERFACE BUS = S_AXI, BUS_STD = AXI, BUS_TYPE = SLAVE
BUS_INTERFACE BUS = PORTB, BUS_STD = XIL_BRAM, BUS_TYPE = INITIATOR

## Generics for VHDL or Parameters for Verilog
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector(31 downto 0), BUS = S_AXI, ADDRESS = BASE, PAIR = C_HIGHADDR, MIN_SIZE = 0x1000, ASSIGNMENT = REQUIRE
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector(31 downto 0), BUS = S_AXI, ADDRESS = HIGH, PAIR = C_BASEADDR, ASSIGNMENT = REQUIRE
PARAMETER C_S_AXI_ADDR_WIDTH = 32, DT = INTEGER, ASSIGNMENT = CONSTANT, BUS = S_AXI
PARAMETER C_S_AXI_DATA_WIDTH = 32, DT = INTEGER, ASSIGNMENT = CONSTANT, BUS = S_AXI
PARAMETER C_S_AXI_ID_WIDTH = 1, DT = INTEGER, BUS = S_AXI
PARAMETER C_S_AXI_SUPPORT_BURST = 0, DT = INTEGER, ASSIGNMENT = CONSTANT, BUS = S_AXI

# Bus specific parameters

# Memory Map Information
# From Registers
PARAMETER C_MEMMAP_STATUS = 0x818, DT = integer, ASSIGNMENT = CONSTANT, TYPE = NON_HDL 
PARAMETER C_MEMMAP_STATUS_N_BITS = 32, DT = integer, ASSIGNMENT = CONSTANT, TYPE = NON_HDL 
PARAMETER C_MEMMAP_STATUS_BIN_PT = 0, DT = integer, ASSIGNMENT = CONSTANT, TYPE = NON_HDL
# To Registers
PARAMETER C_MEMMAP_TIMING = 0x800, DT = integer, ASSIGNMENT = CONSTANT, TYPE = NON_HDL
PARAMETER C_MEMMAP_TIMING_N_BITS = 32, DT = integer, ASSIGNMENT = CONSTANT, TYPE = NON_HDL
PARAMETER C_MEMMAP_TIMING_BIN_PT = 0, DT = integer, ASSIGNMENT = CONSTANT, TYPE = NON_HDL
PARAMETER C_MEMMAP_CONFIG = 0x804, DT = integer, ASSIGNMENT = CONSTANT, TYPE = NON_HDL
PARAMETER C_MEMMAP_CONFIG_N_BITS = 32, DT = integer, ASSIGNMENT = CONSTANT, TYPE = NON_HDL
PARAMETER C_MEMMAP_CONFIG_BIN_PT = 0, DT = integer, ASSIGNMENT = CONSTANT, TYPE = NON_HDL
PARAMETER C_MEMMAP_PKT_BUF_SEL = 0x808, DT = integer, ASSIGNMENT = CONSTANT, TYPE = NON_HDL
PARAMETER C_MEMMAP_PKT_BUF_SEL_N_BITS = 32, DT = integer, ASSIGNMENT = CONSTANT, TYPE = NON_HDL
PARAMETER C_MEMMAP_PKT_BUF_SEL_BIN_PT = 0, DT = integer, ASSIGNMENT = CONSTANT, TYPE = NON_HDL
PARAMETER C_MEMMAP_OUTPUT_SCALING = 0x80C, DT = integer, ASSIGNMENT = CONSTANT, TYPE = NON_HDL
PARAMETER C_MEMMAP_OUTPUT_SCALING_N_BITS = 32, DT = integer, ASSIGNMENT = CONSTANT, TYPE = NON_HDL
PARAMETER C_MEMMAP_OUTPUT_SCALING_BIN_PT = 0, DT = integer, ASSIGNMENT = CONSTANT, TYPE = NON_HDL
PARAMETER C_MEMMAP_TX_START = 0x810, DT = integer, ASSIGNMENT = CONSTANT, TYPE = NON_HDL
PARAMETER C_MEMMAP_TX_START_N_BITS = 32, DT = integer, ASSIGNMENT = CONSTANT, TYPE = NON_HDL
PARAMETER C_MEMMAP_TX_START_BIN_PT = 0, DT = integer, ASSIGNMENT = CONSTANT, TYPE = NON_HDL
PARAMETER C_MEMMAP_FFT_CONFIG = 0x814, DT = integer, ASSIGNMENT = CONSTANT, TYPE = NON_HDL
PARAMETER C_MEMMAP_FFT_CONFIG_N_BITS = 32, DT = integer, ASSIGNMENT = CONSTANT, TYPE = NON_HDL
PARAMETER C_MEMMAP_FFT_CONFIG_BIN_PT = 0, DT = integer, ASSIGNMENT = CONSTANT, TYPE = NON_HDL
# From FIFOs
# To FIFOs
# Shared RAMs

# Ports
PORT axi_aresetn = aresetn, BUS = S_AXI, SIGIS = RST, DIR = IN
PORT bram_din = BRAM_Din, VEC = [0:(64-1)], BUS = PORTB, DIR = IN
PORT sysgen_clk = "", SIGIS = CLK, ASSIGNMENT = REQUIRE, DIR = IN
PORT dac_tx_clk = "", DIR = IN
PORT mac_timestamp_lsb = "", VEC = [0:(32-1)], DIR = IN
PORT mac_timestamp_msb = "", VEC = [0:(32-1)], DIR = IN
PORT phy_tx_ant_mask = "", VEC = [0:(4-1)], DIR = IN
PORT phy_tx_gain_a = "", VEC = [0:(6-1)], DIR = IN
PORT phy_tx_gain_b = "", VEC = [0:(6-1)], DIR = IN
PORT phy_tx_gain_c = "", VEC = [0:(6-1)], DIR = IN
PORT phy_tx_gain_d = "", VEC = [0:(6-1)], DIR = IN
PORT phy_tx_pkt_buf = "", VEC = [0:(4-1)], DIR = IN
PORT phy_tx_start = "", DIR = IN
PORT rc_phy_start = "", DIR = IN
PORT s_axi_araddr = araddr, VEC = [0:(32-1)], BUS = S_AXI, DIR = IN
PORT s_axi_arburst = arburst, VEC = [0:(2-1)], BUS = S_AXI, DIR = IN
PORT s_axi_arcache = arcache, VEC = [0:(4-1)], BUS = S_AXI, DIR = IN
PORT s_axi_arid = arid, VEC = [0:(C_S_AXI_ID_WIDTH-1)], BUS = S_AXI, DIR = IN
PORT s_axi_arlen = arlen, VEC = [0:(8-1)], BUS = S_AXI, DIR = IN
PORT s_axi_arlock = arlock, VEC = [0:(2-1)], BUS = S_AXI, DIR = IN
PORT s_axi_arprot = arprot, VEC = [0:(3-1)], BUS = S_AXI, DIR = IN
PORT s_axi_arsize = arsize, VEC = [0:(3-1)], BUS = S_AXI, DIR = IN
PORT s_axi_arvalid = arvalid, BUS = S_AXI, DIR = IN
PORT s_axi_awaddr = awaddr, VEC = [0:(32-1)], BUS = S_AXI, DIR = IN
PORT s_axi_awburst = awburst, VEC = [0:(2-1)], BUS = S_AXI, DIR = IN
PORT s_axi_awcache = awcache, VEC = [0:(4-1)], BUS = S_AXI, DIR = IN
PORT s_axi_awid = awid, VEC = [0:(C_S_AXI_ID_WIDTH-1)], BUS = S_AXI, DIR = IN
PORT s_axi_awlen = awlen, VEC = [0:(8-1)], BUS = S_AXI, DIR = IN
PORT s_axi_awlock = awlock, VEC = [0:(2-1)], BUS = S_AXI, DIR = IN
PORT s_axi_awprot = awprot, VEC = [0:(3-1)], BUS = S_AXI, DIR = IN
PORT s_axi_awsize = awsize, VEC = [0:(3-1)], BUS = S_AXI, DIR = IN
PORT s_axi_awvalid = awvalid, BUS = S_AXI, DIR = IN
PORT s_axi_bready = bready, BUS = S_AXI, DIR = IN
PORT s_axi_rready = rready, BUS = S_AXI, DIR = IN
PORT s_axi_wdata = wdata, VEC = [0:(32-1)], BUS = S_AXI, DIR = IN
PORT s_axi_wlast = wlast, BUS = S_AXI, DIR = IN
PORT s_axi_wstrb = wstrb, VEC = [0:(4-1)], BUS = S_AXI, DIR = IN
PORT s_axi_wvalid = wvalid, BUS = S_AXI, DIR = IN
PORT axi_aclk = "", BUS = S_AXI, SIGIS = CLK, ASSIGNMENT = REQUIRE, DIR = IN
PORT bram_addr = BRAM_Addr, VEC = [0:(32-1)], BUS = PORTB, DIR = OUT
PORT bram_dout = BRAM_Dout, VEC = [0:(64-1)], BUS = PORTB, DIR = OUT
PORT bram_en = BRAM_En, BUS = PORTB, DIR = OUT
PORT bram_reset = BRAM_Rst, BUS = PORTB, DIR = OUT
PORT bram_wen = BRAM_WEN, VEC = [0:(8-1)], BUS = PORTB, DIR = OUT
PORT dbg_tx_running = "", DIR = OUT
PORT phy_tx_done = "", DIR = OUT
PORT phy_tx_started = "", DIR = OUT
PORT rc_tx_gain_a = "", VEC = [0:(6-1)], DIR = OUT
PORT rc_tx_gain_b = "", VEC = [0:(6-1)], DIR = OUT
PORT rc_tx_gain_c = "", VEC = [0:(6-1)], DIR = OUT
PORT rc_tx_gain_d = "", VEC = [0:(6-1)], DIR = OUT
PORT rc_usr_rxen = "", DIR = OUT
PORT rc_usr_txen_a = "", DIR = OUT
PORT rc_usr_txen_b = "", DIR = OUT
PORT rc_usr_txen_c = "", DIR = OUT
PORT rc_usr_txen_d = "", DIR = OUT
PORT rfa_dac_i = "", VEC = [0:(12-1)], DIR = OUT
PORT rfa_dac_q = "", VEC = [0:(12-1)], DIR = OUT
PORT rfb_dac_i = "", VEC = [0:(12-1)], DIR = OUT
PORT rfb_dac_q = "", VEC = [0:(12-1)], DIR = OUT
PORT rfc_dac_i = "", VEC = [0:(12-1)], DIR = OUT
PORT rfc_dac_q = "", VEC = [0:(12-1)], DIR = OUT
PORT rfd_dac_i = "", VEC = [0:(12-1)], DIR = OUT
PORT rfd_dac_q = "", VEC = [0:(12-1)], DIR = OUT
PORT rx_sigs_invalid = "", DIR = OUT
PORT s_axi_arready = arready, BUS = S_AXI, DIR = OUT
PORT s_axi_awready = awready, BUS = S_AXI, DIR = OUT
PORT s_axi_bid = bid, VEC = [0:(C_S_AXI_ID_WIDTH-1)], BUS = S_AXI, DIR = OUT
PORT s_axi_bresp = bresp, VEC = [0:(2-1)], BUS = S_AXI, DIR = OUT
PORT s_axi_bvalid = bvalid, BUS = S_AXI, DIR = OUT
PORT s_axi_rdata = rdata, VEC = [0:(32-1)], BUS = S_AXI, DIR = OUT
PORT s_axi_rid = rid, VEC = [0:(C_S_AXI_ID_WIDTH-1)], BUS = S_AXI, DIR = OUT
PORT s_axi_rlast = rlast, BUS = S_AXI, DIR = OUT
PORT s_axi_rresp = rresp, VEC = [0:(2-1)], BUS = S_AXI, DIR = OUT
PORT s_axi_rvalid = rvalid, BUS = S_AXI, DIR = OUT
PORT s_axi_wready = wready, BUS = S_AXI, DIR = OUT

END
